name: Build

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    paths-ignore:
      - '**/*.md'
      - '.gitignore'
      - '.dockerignore'
      - '.github/**'
      - '.github/workflows/**'
      - 'LICENSE'
      - 'MANIFEST.in'
      - 'logo.png'
      - 'requirements.txt'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps: 
    - uses: actions/checkout@v3
    -
      name: Build the Docker image
      run: |
              docker build . \
              --file ./docker/Dockerfile \
              --label "build=${GITHUB_RUN_ID}" \
              --label "version=${{ vars.MAJOR }}.${{ vars.MINOR }}" \
              --tag "${{ github.repository }}:latest" \
              --tag "${{ github.repository }}:${{ vars.MAJOR }}.${{ vars.MINOR }}" \
              --tag "ghcr.io/${{ github.repository }}:latest" \
              --tag "ghcr.io/${{ github.repository }}:${{ vars.MAJOR }}.${{ vars.MINOR }}"
    -
      name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
      name: Push to DockerHub
      run: |
              docker push "${{ github.repository }}:${{ vars.MAJOR }}.${{ vars.MINOR }}" &&\
              docker push "${{ github.repository }}:latest"
    -
      name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    -
      name: Push to Github Container Registry
      run: |
              docker push "ghcr.io/${{ github.repository }}:${{ vars.MAJOR }}.${{ vars.MINOR }}" && \
              docker push "ghcr.io/${{ github.repository }}:latest"

  release:
    needs: build
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - 
      name: Get previous tag
      id: previousTag
      run: |
        name=$(git --no-pager tag --sort=creatordate --merged ${{ github.ref_name }} | tail -1)
        echo "previousTag: $name"
        echo "previousTag=$name" >> $GITHUB_ENV
    -
      name: Generate changelog
      id: changelog
      uses: requarks/changelog-action@v1
      with:
        token: ${{ github.token }}
        fromTag: ${{ github.ref_name }}
        toTag: ${{ env.previousTag }}
        writeToFile: false
        reverseOrder: true
        includeInvalidCommits: true
        excludeTypes: "docs,build,chore"
    -
      name: Create a release
      uses: action-pack/github-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
      with:
        tag: "v${{ vars.MAJOR }}.${{ vars.MINOR }}"
        title: "v${{ vars.MAJOR }}.${{ vars.MINOR }}"
        body: |
          ${{ steps.changelog.outputs.changes }}

          **Full Changelog**: https://github.com/${{ github.repository }}/compare//${{ env.previousTag }}...v${{ vars.MAJOR }}.${{ vars.MINOR }}
    -
      name: Increment version variable
      uses: action-pack/bump@v2
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}
